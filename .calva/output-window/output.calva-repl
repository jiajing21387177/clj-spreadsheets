; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "shadow-cljs" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: pushd c:\source\clj-spreadsheets & npx shadow-cljs -d cider/cider-nrepl:0.47.1 watch :app & popd
; Using host:port localhost:64864 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉shadow.user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.cljs'
nil
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.41s)
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.33s)
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.37s)
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.28s)
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.47s)
; nil
#object [Promise [object Promise]]
clj꞉app.core꞉> 
1728008236808
clj꞉app.core꞉> 
#'app.core/add-todo
clj꞉app.core꞉> 
:repl/exception!
; 
; 
; Execution error (TypeError) at (<cljs repl>:1).
; module$node_modules$$instantdb$react$dist$index.tx.todos.update is not a function
clj꞉app.core꞉> 
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.41s)
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.28s)
; nil
#object [Promise [object Promise]]
clj꞉app.core꞉> 
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.37s)
; nil
#object [Promise [object Promise]]
clj꞉app.core꞉> 
1728008536428
clj꞉app.core꞉> 
:repl/exception!
; 
; 
; Execution error (Error) at (<cljs repl>:1).
; Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
; 1. You might have mismatching versions of React and the renderer (such as React DOM)
; 2. You might be breaking the Rules of Hooks
; 3. You might have more than one copy of React in the same app
; See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.
clj꞉app.core꞉> 
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.96s)
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.39s)
nil
clj꞉app.core꞉> 
#'app.core/db
clj꞉app.core꞉> 
; nil
#object [Promise [object Promise]]
clj꞉app.core꞉> 
#'app.core/add-todo
clj꞉app.core꞉> 
; nil
nil
clj꞉app.core꞉> 
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.36s)
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.32s)
#'app.core/db
clj꞉app.core꞉> 
:repl/exception!
; 
; 
; Execution error (Error) at (<cljs repl>:1).
; No protocol method IDeref.-deref defined for type object: [object Object]
clj꞉app.core꞉> 
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.39s)
#object [Promise [object Promise]]
clj꞉app.core꞉> 
#'app.core/add-todo
clj꞉app.core꞉> 
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.67s)
; [:app] Compiling ...
; [:app] Build failure:
; ------ ERROR -------------------------------------------------------------------
;  File: C:\source\clj-spreadsheets\src\app\core.cljs:1:1
; --------------------------------------------------------------------------------
; 
;    1 | (ns app.core
; -------^------------------------------------------------------------------------
; Invalid :refer, var components.sidebar/sidebar-mobile does not exist
; --------------------------------------------------------------------------------
;    2 |   (:require ["react-dom/client" :refer [createRoot]]
;    3 |             ["@instantdb/react" :as instantdb :refer [tx]]
;    4 |             [reagent.core :as r]
;    5 |             [components.header :refer [header]]
; --------------------------------------------------------------------------------
; 
; [:app] Compiling ...
; [:app] Build completed. (404 files, 3 compiled, 0 warnings, 0.44s)
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.29s)
nil
clj꞉app.core꞉> 
; nil
#object [Promise [object Promise]]
clj꞉app.core꞉> 
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.31s)
#object [InstantReactWeb [object Object]]
clj꞉app.core꞉> 
#object [cljs.core.Delay {:status :ready, :val #object [InstantReactWeb [object Object]]}]
clj꞉app.core꞉> 
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.31s)
#'app.core/add-todo
clj꞉app.core꞉> 
; nil
#object [Promise [object Promise]]
clj꞉app.core꞉> 
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.39s)
:repl/exception!
; 
; 
; Execution error (TypeError) at (<cljs repl>:1).
; Cannot convert object to primitive value
clj꞉app.core꞉> 
:repl/exception!
; 
; 
; Execution error (TypeError) at (<cljs repl>:1).
; Cannot convert object to primitive value
clj꞉app.core꞉> 
; [:app] Compiling ...
; [:app] Build completed. (404 files, 1 compiled, 0 warnings, 0.33s)
